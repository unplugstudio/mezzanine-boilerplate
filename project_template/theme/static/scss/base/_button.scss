button,
input[type="submit"],
input[type="reset"] {
	cursor: pointer;
}

.button { // stylelint-disable-line rscss/class-format
	appearance: none;
	background-color: transparent;
	border: solid 2px currentColor;
	border-radius: _size(border-radius);
	color: inherit;
	display: block;
	font-weight: _font(weight-bold);
	letter-spacing: 1px;
	padding: 0.5em 0 0.4em;
	text-align: center;
	text-decoration: none;
	text-transform: uppercase;
	transition-duration: _duration(medium);
	transition-property: background-color, color, filter;

	&::after {
		margin-left: 0.35em;
	}

	&:active,
	&:focus,
	&:hover {
		background-color: _palette(border-bg);
		color: inherit;
		text-decoration: none;
	}

	&.alt {
		background-color: _palette(fg);
		border-color: _palette(fg);
		color: _palette(bg);
	}

	&.icon {
		padding-left: 1.35em;

		&::before {
			margin-right: 0.5em;
		}
	}

	&.fit {
		display: block;
		margin: 0 0 (_size(element-margin) * 0.5) 0;
		position: relative;
		width: 100%;

		&::after {
			position: absolute;
			right: 0;
		}
	}

	&.small {
		font-size: 0.7em;
	}

	&.big {
		font-size: 1.5em;
	}

	&.disabled,
	&:disabled {
		opacity: 0.25;
		pointer-events: none;
	}

	@include mq($from: sm) {
		display: inline-block;
		padding-left: 1.25em;
		padding-right: 1.25em;
	}

	// Create all color variations
	@each $i in map-keys(_palette(highlight)) {
		$highlight: _palette(highlight, $i);

		&.style-#{$i} {
			background-color: transparent;
			border-color: $highlight;
			color: $highlight;

			&:focus,
			&:hover {
				@include filter-lighten;

				background-color: $highlight;
				color: #fff;
			}

			&:active {
				@include filter-darken;

				background-color: $highlight;
				color: #fff;
			}

			&.alt {
				background-color: $highlight;
				color: #fff;
			}
		}
	}
}
